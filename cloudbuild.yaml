steps:
  # build the container image
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "us-central1-docker.pkg.dev/dreamboothy/registry-backend/registry-backend-image:$SHORT_SHA", "."]
    # push container image
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "us-central1-docker.pkg.dev/dreamboothy/registry-backend/registry-backend-image:$SHORT_SHA"]

  # Clone the GitHub repository
  - name: "gcr.io/cloud-builders/git"
    args: [ "clone", "git@github.com:Comfy-Org/registry-backend.git", "." ]
    dir: "/workspace"

  # Run database migrations for staging
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - | 
        curl -sSL https://atlasgo.sh | sh
        atlas migrate apply --dir "file://ent/migrate/migrations" --url $$STAGING_DB_CONNECTION_STRING
    secretEnv: ['STAGING_DB_CONNECTION_STRING']
    dir: "/workspace/registry-backend"

  # Publish the release
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:458.0.1'
    entrypoint: 'bash'
    args:
    - '-c'
    - > 
      gcloud deploy releases create release-registry-backend-$SHORT_SHA
      --project=dreamboothy
      --region=us-central1
      --delivery-pipeline=comfy-backend-api-pipeline
      --images=registry-backend-image-substitute=us-central1-docker.pkg.dev/dreamboothy/registry-backend/registry-backend-image:$SHORT_SHA

availableSecrets:
  secretManager:
    - versionName: projects/357148958219/secrets/STAGING_SUPABASE_CONNECTION_STRING/versions/latest
      env: 'STAGING_DB_CONNECTION_STRING'

options:
  machineType: 'E2_HIGHCPU_8'